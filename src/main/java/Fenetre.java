/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import javax.swing.JFileChooser;
import java.io.File;
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.awt.FileDialog;
/**
 *
 * @author kian
 */
public class Fenetre extends javax.swing.JFrame {

    /**
     * Creates new form Fenetre
     */
    public Fenetre() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonOuvrir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTexte = new javax.swing.JTextArea();
        jButtonEnregistrer = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonOuvrir.setText("Ouvrir un fichier");
        jButtonOuvrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOuvrirActionPerformed(evt);
            }
        });

        jTexte.setColumns(20);
        jTexte.setRows(5);
        jScrollPane1.setViewportView(jTexte);

        jButtonEnregistrer.setText("Enregister");
        jButtonEnregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnregistrerActionPerformed(evt);
            }
        });

        jLabel1.setText("Ouvrir : sélectionner un fichier et afficher le contenu dans le champ de texte");

        jLabel2.setText("Enregistrer : enregistre le contenu du champ de texte dans un fichier ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonOuvrir, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jButtonEnregistrer))
                            .addComponent(jLabel1))
                        .addGap(0, 178, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addGap(7, 7, 7)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOuvrir)
                    .addComponent(jButtonEnregistrer))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonOuvrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOuvrirActionPerformed
        // TODO add your handling code here:
        
        /*JFileChooser fc = new JFileChooser();
        int returnValue = fc.showOpenDialog(this); // Sélection d'un élement du système de fichier
        // int returnValue = fc.showSaveDialog(this); // Enregister sous 
        if (returnValue == JFileChooser.APPROVE_OPTION)
        {
            // la méthode getSelectedFile retourne encapsulée dans un objet File
            // le chemin du fichier sélectionné avec le dialogue ShowOpenDialog
            File fic = fc.getSelectedFile();
            try
            {
                // on ouvre en lecture le fichier sélectionné 
                FileReader f = new FileReader(fic);
                BufferedReader in = new BufferedReader(f);
                String ligne = null;
                
                // on parcourt les lignes du fichier texte que l'on écrit dans le champ
                // de texte en n'oubliant pas de passer à la ligne entre deux lignes 
                // cons&cutives
                while (in.ready())
                {
                    ligne = in.readLine();
                    jTexte.append(ligne);
                    jTexte.append("\n");
                }
                
                // on ferme le fichier (NE PAS OUBLIER)
               in.close();
            }
            catch(IOException e)
            {
                
            }        
        }*/
         

        FileDialog fd = new FileDialog(this,"Choisir un fichier",FileDialog.LOAD);
        fd.setDirectory("C:\\");
        fd.setFile("*.*");
        fd.setVisible(true);
        String directory = fd.getDirectory();
        String filename = fd.getFile();
        if (filename != null)
        {                    
           System.out.println(directory);// répertoire parent
           System.out.println(filename); // nom du fichier
        }
        


        
    }//GEN-LAST:event_jButtonOuvrirActionPerformed

    private void jButtonEnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnregistrerActionPerformed
        // TODO add your handling code here:
        
        JFileChooser fc = new JFileChooser();
        int returnValue = fc.showSaveDialog(this);
        
        if (returnValue == JFileChooser.APPROVE_OPTION)
        {
            File fic = fc.getSelectedFile();
            try
            {
                //on ouvre en création le fichier (ATTENTION. si le fichier existe, il est supprimé)
                FileWriter f = new FileWriter(fic);
                BufferedWriter out = new BufferedWriter(f);
                
                // DEUX EXEMPLES (commenter / décommenter pour les tester)
                
                // EXEMPLE 1: on écrit le contenu du champ de texte dans le fichier texte
                out.write(jTexte.getText());
                
                // EXEMPLE 2: on écrit chaque ligne avec un numéro en début de ligne  
                /*
                String[] lesLignes = jTexte.getText().split("\\n");
            
                for(int i = 0;i<lesLignes.length;i++)
                {
                    out.write(String.format("%d --- %s", i+1,lesLignes[i]));
                    out.newLine();
                }
                */
                
                out.flush();
                out.close();
            }
            catch(IOException e)
            {
                
            }
        }
    }//GEN-LAST:event_jButtonEnregistrerActionPerformed
    
        /*JFileChooser fc = new JFileChooser();
        int returnValue = fc.showOpenDialog(this); // Sélection d'un élement du système de fichier
        // int returnValue = fc.showSaveDialog(this); // Enregister sous 
        if (returnValue == JFileChooser.APPROVE_OPTION)
        {
            // la méthode getSelectedFile retourne encapsulée dans un objet File
            // le chemin du fichier sélectionné avec le dialogue ShowOpenDialog
            File fic = fc.getSelectedFile();
            try
            {
                // on ouvre en lecture le fichier sélectionné 
                FileReader f = new FileReader(fic);
                BufferedReader in = new BufferedReader(f);
                String ligne = null;
                
                // on parcourt les lignes du fichier texte que l'on écrit dans le champ
                // de texte en n'oubliant pas de passer à la ligne entre deux lignes 
                // cons&cutives
                while (in.ready())
                {
                    ligne = in.readLine();
                    jTexte.append(ligne);
                    jTexte.append("\n");
                }
                
                // on ferme le fichier (NE PAS OUBLIER)
               in.close();
            }
            catch(IOException e)
            {
                
            }        
        }*/
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fenetre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEnregistrer;
    private javax.swing.JButton jButtonOuvrir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTexte;
    // End of variables declaration//GEN-END:variables
}/*
fileImage = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("jpg","png");
        fileImage.setFileFilter(filter);
        int returnValue = fileImage.showOpenDialog(null); // Sélection d'un élement du système de fichier
        if (returnValue == JFileChooser.APPROVE_OPTION)
        {
            // la méthode getSelectedFile retourne encapsulée dans un objet File
            // le chemin du fichier sélectionné avec le dialogue ShowOpenDialog
            File fic = fileImage.getSelectedFile();            
            //String path = fic.getAbsolutePath();
            //currentFile = path;
            try 
            {
                Image imag = ImageIO.read(fic);
                ImageIcon icon = new ImageIcon(imag);
                jLabel.setIcon(icon);
            } 
            catch (IOException ex) 
            {
                Logger.getLogger(ProjetDicoImage.class.getName()).log(Level.SEVERE, null, ex);
            }
            


case 6:
            
            fImage = new File("Images/Real Madrid.png");
            file = new File("Définition/Real Madrid.txt");
            {
                try 
                {
                    FileReader fr = new FileReader(file);
                    BufferedReader br = new BufferedReader(fr);
                    String ligne;
                    while (br.ready())
                        {
                            ligne = br.readLine();
                            jTextArea1.setText(jTextArea1.getText()+ligne+"\n");                     
                        }

                    br.close();
                    Image image = ImageIO.read(fImage);
                    jLabel.setIcon(new javax.swing.ImageIcon(image));
                } 
               
                catch (FileNotFoundException ex) 
                {
                    Logger.getLogger(ProjetDicoImage.class.getName()).log(Level.SEVERE, null, ex);
                } 
                catch (IOException ex) 
                {
                Logger.getLogger(ProjetDicoImage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            break;
        } */